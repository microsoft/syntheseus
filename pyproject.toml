[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "syntheseus"
authors = [
    {name = "Austin Tripp", email = "ajt212@cam.ac.uk"},
    {name = "Krzysztof Maziarz", email = "krzysztof.maziarz@microsoft.com"},
    {name = "Megan Stanley", email = "meganstanley@microsoft.com"},
    {name = "Marwin Segler", email = "marwinsegler@microsoft.com"},
]
description = "A package for retrosynthetic planning."
readme = "README.md"
requires-python = ">=3.7"
license = {file = "LICENSE"}
dynamic = ["version"]
dependencies = [
    "more_itertools",       # reaction_prediction
    "networkx",             # search
    "numpy",                # reaction_prediction, search
    "omegaconf",            # reaction_prediction
    "pydantic>=1.10.5,<2",  # reaction_prediction
    "rdkit",                # reaction_prediction, search
    "tqdm",                 # reaction_prediction
]

[project.optional-dependencies]
viz = [
  "pillow",
  "graphviz"
]
dev = [
  "pytest",
  "pytest-cov",
  "pre-commit"
]
chemformer = [
  "chemformer @ git+https://github.com/kmaziarz/Chemformer.git"
]
local-retro = [
  "local_retro @ git+https://github.com/kmaziarz/LocalRetro.git"
]
megan = [
  "megan @ git+https://github.com/kmaziarz/megan.git"
]
mhn-react = [
  "mhnreact @ git+https://github.com/kmaziarz/mhn-react.git"
]
retro-knn = [
  "local_retro @ git+https://github.com/kmaziarz/LocalRetro.git",
  "torch-scatter"
]
root-aligned = [
  "root_aligned @ git+https://github.com/kmaziarz/RootAligned.git"
]
all-single-step = [
  "syntheseus[chemformer,local-retro,megan,mhn-react,retro-knn,root-aligned]"
]
all = [
  "syntheseus[viz,dev,all-single-step]"
]

[tool.setuptools.packages.find]
# Guidance from: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
where = ["."]
include = ["syntheseus*"]
exclude = ["syntheseus.tests*"]
namespaces = false

[tool.setuptools.package-data]
"syntheseus" = ["py.typed"]

[tool.setuptools_scm]

[tool.black]
line-length = 100
include = '\.pyi?$'

[tool.mypy]
python_version = 3.9  # pin modern python version
ignore_missing_imports = true

[tool.ruff]
line-length = 100
# Check https://beta.ruff.rs/docs/rules/ for full list of rules
select = [
  "E", "W",  # pycodestyle
  "F",  # Pyflakes
  "I",  # isort
]
ignore = [
  # W605: invalid escape sequence -- triggered by pseudo-LaTeX in comments
  "W605",
  # E501: Line too long -- triggered by comments and such. black deals with shortening.
  "E501",
  # E741:  Do not use variables named 'l', 'o', or 'i' -- disagree with PEP8
  "E741",
]
